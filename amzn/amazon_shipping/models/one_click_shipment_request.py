# coding: utf-8

"""
    Amazon Shipping API

    The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.  # noqa: E501

    OpenAPI spec version: v2
    Contact: swa-api-core@amazon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class OneClickShipmentRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ship_to': 'Address',
        'ship_from': 'Address',
        'return_to': 'Address',
        'ship_date': 'datetime',
        'packages': 'PackageList',
        'value_added_services_details': 'OneClickShipmentValueAddedServiceDetails',
        'tax_details': 'TaxDetailList',
        'channel_details': 'ChannelDetails',
        'label_specifications': 'RequestedDocumentSpecification',
        'service_selection': 'ServiceSelection',
        'shipper_instruction': 'ShipperInstruction',
        'destination_access_point_details': 'AccessPointDetails'
    }

    attribute_map = {
        'ship_to': 'shipTo',
        'ship_from': 'shipFrom',
        'return_to': 'returnTo',
        'ship_date': 'shipDate',
        'packages': 'packages',
        'value_added_services_details': 'valueAddedServicesDetails',
        'tax_details': 'taxDetails',
        'channel_details': 'channelDetails',
        'label_specifications': 'labelSpecifications',
        'service_selection': 'serviceSelection',
        'shipper_instruction': 'shipperInstruction',
        'destination_access_point_details': 'destinationAccessPointDetails'
    }

    def __init__(self, ship_to=None, ship_from=None, return_to=None, ship_date=None, packages=None, value_added_services_details=None, tax_details=None, channel_details=None, label_specifications=None, service_selection=None, shipper_instruction=None, destination_access_point_details=None):  # noqa: E501
        """OneClickShipmentRequest - a model defined in Swagger"""  # noqa: E501
        self._ship_to = None
        self._ship_from = None
        self._return_to = None
        self._ship_date = None
        self._packages = None
        self._value_added_services_details = None
        self._tax_details = None
        self._channel_details = None
        self._label_specifications = None
        self._service_selection = None
        self._shipper_instruction = None
        self._destination_access_point_details = None
        self.discriminator = None
        if ship_to is not None:
            self.ship_to = ship_to
        self.ship_from = ship_from
        if return_to is not None:
            self.return_to = return_to
        if ship_date is not None:
            self.ship_date = ship_date
        self.packages = packages
        if value_added_services_details is not None:
            self.value_added_services_details = value_added_services_details
        if tax_details is not None:
            self.tax_details = tax_details
        self.channel_details = channel_details
        self.label_specifications = label_specifications
        self.service_selection = service_selection
        if shipper_instruction is not None:
            self.shipper_instruction = shipper_instruction
        if destination_access_point_details is not None:
            self.destination_access_point_details = destination_access_point_details

    @property
    def ship_to(self):
        """Gets the ship_to of this OneClickShipmentRequest.  # noqa: E501


        :return: The ship_to of this OneClickShipmentRequest.  # noqa: E501
        :rtype: Address
        """
        return self._ship_to

    @ship_to.setter
    def ship_to(self, ship_to):
        """Sets the ship_to of this OneClickShipmentRequest.


        :param ship_to: The ship_to of this OneClickShipmentRequest.  # noqa: E501
        :type: Address
        """

        self._ship_to = ship_to

    @property
    def ship_from(self):
        """Gets the ship_from of this OneClickShipmentRequest.  # noqa: E501


        :return: The ship_from of this OneClickShipmentRequest.  # noqa: E501
        :rtype: Address
        """
        return self._ship_from

    @ship_from.setter
    def ship_from(self, ship_from):
        """Sets the ship_from of this OneClickShipmentRequest.


        :param ship_from: The ship_from of this OneClickShipmentRequest.  # noqa: E501
        :type: Address
        """
        if ship_from is None:
            raise ValueError("Invalid value for `ship_from`, must not be `None`")  # noqa: E501

        self._ship_from = ship_from

    @property
    def return_to(self):
        """Gets the return_to of this OneClickShipmentRequest.  # noqa: E501


        :return: The return_to of this OneClickShipmentRequest.  # noqa: E501
        :rtype: Address
        """
        return self._return_to

    @return_to.setter
    def return_to(self, return_to):
        """Sets the return_to of this OneClickShipmentRequest.


        :param return_to: The return_to of this OneClickShipmentRequest.  # noqa: E501
        :type: Address
        """

        self._return_to = return_to

    @property
    def ship_date(self):
        """Gets the ship_date of this OneClickShipmentRequest.  # noqa: E501

        The ship date and time (the requested pickup). This defaults to the current date and time.  # noqa: E501

        :return: The ship_date of this OneClickShipmentRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._ship_date

    @ship_date.setter
    def ship_date(self, ship_date):
        """Sets the ship_date of this OneClickShipmentRequest.

        The ship date and time (the requested pickup). This defaults to the current date and time.  # noqa: E501

        :param ship_date: The ship_date of this OneClickShipmentRequest.  # noqa: E501
        :type: datetime
        """

        self._ship_date = ship_date

    @property
    def packages(self):
        """Gets the packages of this OneClickShipmentRequest.  # noqa: E501


        :return: The packages of this OneClickShipmentRequest.  # noqa: E501
        :rtype: PackageList
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this OneClickShipmentRequest.


        :param packages: The packages of this OneClickShipmentRequest.  # noqa: E501
        :type: PackageList
        """
        if packages is None:
            raise ValueError("Invalid value for `packages`, must not be `None`")  # noqa: E501

        self._packages = packages

    @property
    def value_added_services_details(self):
        """Gets the value_added_services_details of this OneClickShipmentRequest.  # noqa: E501


        :return: The value_added_services_details of this OneClickShipmentRequest.  # noqa: E501
        :rtype: OneClickShipmentValueAddedServiceDetails
        """
        return self._value_added_services_details

    @value_added_services_details.setter
    def value_added_services_details(self, value_added_services_details):
        """Sets the value_added_services_details of this OneClickShipmentRequest.


        :param value_added_services_details: The value_added_services_details of this OneClickShipmentRequest.  # noqa: E501
        :type: OneClickShipmentValueAddedServiceDetails
        """

        self._value_added_services_details = value_added_services_details

    @property
    def tax_details(self):
        """Gets the tax_details of this OneClickShipmentRequest.  # noqa: E501


        :return: The tax_details of this OneClickShipmentRequest.  # noqa: E501
        :rtype: TaxDetailList
        """
        return self._tax_details

    @tax_details.setter
    def tax_details(self, tax_details):
        """Sets the tax_details of this OneClickShipmentRequest.


        :param tax_details: The tax_details of this OneClickShipmentRequest.  # noqa: E501
        :type: TaxDetailList
        """

        self._tax_details = tax_details

    @property
    def channel_details(self):
        """Gets the channel_details of this OneClickShipmentRequest.  # noqa: E501


        :return: The channel_details of this OneClickShipmentRequest.  # noqa: E501
        :rtype: ChannelDetails
        """
        return self._channel_details

    @channel_details.setter
    def channel_details(self, channel_details):
        """Sets the channel_details of this OneClickShipmentRequest.


        :param channel_details: The channel_details of this OneClickShipmentRequest.  # noqa: E501
        :type: ChannelDetails
        """
        if channel_details is None:
            raise ValueError("Invalid value for `channel_details`, must not be `None`")  # noqa: E501

        self._channel_details = channel_details

    @property
    def label_specifications(self):
        """Gets the label_specifications of this OneClickShipmentRequest.  # noqa: E501


        :return: The label_specifications of this OneClickShipmentRequest.  # noqa: E501
        :rtype: RequestedDocumentSpecification
        """
        return self._label_specifications

    @label_specifications.setter
    def label_specifications(self, label_specifications):
        """Sets the label_specifications of this OneClickShipmentRequest.


        :param label_specifications: The label_specifications of this OneClickShipmentRequest.  # noqa: E501
        :type: RequestedDocumentSpecification
        """
        if label_specifications is None:
            raise ValueError("Invalid value for `label_specifications`, must not be `None`")  # noqa: E501

        self._label_specifications = label_specifications

    @property
    def service_selection(self):
        """Gets the service_selection of this OneClickShipmentRequest.  # noqa: E501


        :return: The service_selection of this OneClickShipmentRequest.  # noqa: E501
        :rtype: ServiceSelection
        """
        return self._service_selection

    @service_selection.setter
    def service_selection(self, service_selection):
        """Sets the service_selection of this OneClickShipmentRequest.


        :param service_selection: The service_selection of this OneClickShipmentRequest.  # noqa: E501
        :type: ServiceSelection
        """
        if service_selection is None:
            raise ValueError("Invalid value for `service_selection`, must not be `None`")  # noqa: E501

        self._service_selection = service_selection

    @property
    def shipper_instruction(self):
        """Gets the shipper_instruction of this OneClickShipmentRequest.  # noqa: E501


        :return: The shipper_instruction of this OneClickShipmentRequest.  # noqa: E501
        :rtype: ShipperInstruction
        """
        return self._shipper_instruction

    @shipper_instruction.setter
    def shipper_instruction(self, shipper_instruction):
        """Sets the shipper_instruction of this OneClickShipmentRequest.


        :param shipper_instruction: The shipper_instruction of this OneClickShipmentRequest.  # noqa: E501
        :type: ShipperInstruction
        """

        self._shipper_instruction = shipper_instruction

    @property
    def destination_access_point_details(self):
        """Gets the destination_access_point_details of this OneClickShipmentRequest.  # noqa: E501


        :return: The destination_access_point_details of this OneClickShipmentRequest.  # noqa: E501
        :rtype: AccessPointDetails
        """
        return self._destination_access_point_details

    @destination_access_point_details.setter
    def destination_access_point_details(self, destination_access_point_details):
        """Sets the destination_access_point_details of this OneClickShipmentRequest.


        :param destination_access_point_details: The destination_access_point_details of this OneClickShipmentRequest.  # noqa: E501
        :type: AccessPointDetails
        """

        self._destination_access_point_details = destination_access_point_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OneClickShipmentRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OneClickShipmentRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
